generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  salt     String
}

model Project {
  id          Int               @id @default(autoincrement())
  image       String
  createdAt   DateTime        @default(now())
  translations ProjectTranslation[]
}

model ProjectTranslation {
  id          Int    @id @default(autoincrement())
  language    String
  title       String
  description String
  projectId   Int
  project     Project @relation(fields: [projectId], references: [id])

  @@unique([projectId, language]) // Aynı proje için her dilde tek bir çeviri olmasını sağlar
}

model Award {
  id          Int            @id @default(autoincrement())
  image       String
  createdAt   DateTime        @default(now())
  translations AwardTranslation[]
}

model AwardTranslation {
  id          Int    @id @default(autoincrement())
  language    String
  title       String
  description String
  awardId     Int
  award       Award  @relation(fields: [awardId], references: [id])

  @@unique([awardId, language]) // Aynı ödül için her dilde tek bir çeviri olmasını sağlar
}

model New {
  id          Int             @id @default(autoincrement())
  categoryId  Int
  image       String
  createdAt   DateTime        @default(now())
  featured    Boolean
  author      String
  category    NewCategory     @relation(fields: [categoryId], references: [id])
  translations NewTranslation[]
}

model NewTranslation {
  id          Int    @id @default(autoincrement())
  language    String
  title       String
  slug        String  @unique
  description String
  content     String
  newId       Int
  new         New    @relation(fields: [newId], references: [id])

  @@unique([newId, language]) // Aynı haber için her dilde tek bir çeviri olmasını sağlar
}

model NewCategory {
  id        Int      @id @default(autoincrement())
  translations NewCategoryTranslation[]
  news       New[]    // Ters ilişkiyi burada ekliyoruz
}

model NewCategoryTranslation {
  id        Int    @id @default(autoincrement())
  language  String
  title     String
  categoryId Int
  category  NewCategory @relation(fields: [categoryId], references: [id])

  @@unique([categoryId, language]) // Aynı kategori için her dilde tek bir çeviri olmasını sağlar
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  surname   String
  phone     String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model TeamMember {
  id        Int     @id @default(autoincrement())
  name      String
  surname   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  translations TeamMemberTranslation[]
}

model TeamMemberTranslation {
  id            Int    @id @default(autoincrement())
  language      String
  title         String?   // optional
  role          String
  teamMemberId  Int
  teamMember    TeamMember @relation(fields: [teamMemberId], references: [id])

  @@unique([teamMemberId, language])
}
